!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FIELD_DESCRIPTION!Ruby	mixin	/how the class or module is mixed in (mixin:HOW:MODULE)/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!CMake	D,option	/options specified with -D/
!_TAG_KIND_DESCRIPTION!CMake	f,function	/functions/
!_TAG_KIND_DESCRIPTION!CMake	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!CMake	p,project	/projects/
!_TAG_KIND_DESCRIPTION!CMake	t,target	/targets/
!_TAG_KIND_DESCRIPTION!CMake	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!DosBatch	l,label	/labels/
!_TAG_KIND_DESCRIPTION!DosBatch	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!PowerShell	c,class	/classes/
!_TAG_KIND_DESCRIPTION!PowerShell	f,function	/functions/
!_TAG_KIND_DESCRIPTION!PowerShell	g,enum	/enum names/
!_TAG_KIND_DESCRIPTION!PowerShell	i,filter	/filter/
!_TAG_KIND_DESCRIPTION!PowerShell	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!Rake	d,directory	/directory tasks/
!_TAG_KIND_DESCRIPTION!Rake	f,File	/file tasks/
!_TAG_KIND_DESCRIPTION!Rake	m,multitask	/multi tasks/
!_TAG_KIND_DESCRIPTION!Rake	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!Rake	t,task	/tasks/
!_TAG_KIND_DESCRIPTION!Rake	x,xtask	/tasks defined with special constructor/
!_TAG_KIND_DESCRIPTION!ReStructuredText	C,citation	/citations/
!_TAG_KIND_DESCRIPTION!ReStructuredText	H,title	/titles/
!_TAG_KIND_DESCRIPTION!ReStructuredText	S,subsection	/subsections/
!_TAG_KIND_DESCRIPTION!ReStructuredText	T,target	/targets/
!_TAG_KIND_DESCRIPTION!ReStructuredText	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!ReStructuredText	d,substdef	/substitute definitions/
!_TAG_KIND_DESCRIPTION!ReStructuredText	h,subtitle	/sub titles/
!_TAG_KIND_DESCRIPTION!ReStructuredText	s,section	/sections/
!_TAG_KIND_DESCRIPTION!ReStructuredText	t,subsubsection	/subsubsections/
!_TAG_KIND_DESCRIPTION!Ruby	A,accessor	/accessors/
!_TAG_KIND_DESCRIPTION!Ruby	C,constant	/constants/
!_TAG_KIND_DESCRIPTION!Ruby	L,library	/libraries/
!_TAG_KIND_DESCRIPTION!Ruby	S,singletonMethod	/singleton methods/
!_TAG_KIND_DESCRIPTION!Ruby	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Ruby	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Ruby	f,method	/methods/
!_TAG_KIND_DESCRIPTION!Ruby	m,module	/modules/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!Vim	C,constant	/constant definitions/
!_TAG_KIND_DESCRIPTION!Vim	a,augroup	/autocommand groups/
!_TAG_KIND_DESCRIPTION!Vim	c,command	/user-defined commands/
!_TAG_KIND_DESCRIPTION!Vim	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!Vim	m,map	/maps/
!_TAG_KIND_DESCRIPTION!Vim	n,filename	/vimball filename/
!_TAG_KIND_DESCRIPTION!Vim	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!CMake	0.0	/current.age/
!_TAG_PARSER_VERSION!DosBatch	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!PowerShell	0.0	/current.age/
!_TAG_PARSER_VERSION!Python	0.0	/current.age/
!_TAG_PARSER_VERSION!Rake	0.0	/current.age/
!_TAG_PARSER_VERSION!ReStructuredText	0.0	/current.age/
!_TAG_PARSER_VERSION!Ruby	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!Vim	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/the-commits/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Ruby!library	loaded	/loaded by "load" method/
!_TAG_ROLE_DESCRIPTION!Ruby!library	required	/loaded by "require" method/
!_TAG_ROLE_DESCRIPTION!Ruby!library	requiredRel	/loaded by "require_relative" method/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
#all	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    describe '#all' do$/;"	d	describe:plugin/editorconfig.vim
.	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^    nmap . <Plug>(RepeatDot)$/;"	m
3-space indentation	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^3-space indentation$/;"	s	chapter:Space-based indentation
3_space.py	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^      it '3_space.py' do$/;"	i	describe:plugin/editorconfig.vim.#all
4-space indentation with tab width of 8	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^4-space indentation with tab width of 8$/;"	s	chapter:Space-based indentation
4_space.py	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    it '4_space.py' do$/;"	i	describe:plugin/editorconfig.vim
4_tab.txt	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    it '4_tab.txt' do$/;"	i	describe:plugin/editorconfig.vim
4_tab_width_of_8	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    it '4_tab_width_of_8' do$/;"	i	describe:plugin/editorconfig.vim
<C-A>	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^  nmap  <C-A>     <Plug>SpeedDatingUp$/;"	m
<C-A>	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^  xmap  <C-A>     <Plug>SpeedDatingUp$/;"	m
<C-G>S	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-L>	/home/the-commits/.vim/plugged/vim-sensible/plugin/sensible.vim	/^  nnoremap <silent> <C-L> :nohlsearch<C-R>=has('diff')?'<Bar>diffupdate':''<CR><CR><C-L>$/;"	m
<C-R>	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^    nmap <C-R> <Plug>(RepeatRedo)$/;"	m
<C-S>	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-U>	/home/the-commits/.vim/plugged/vim-sensible/plugin/sensible.vim	/^  inoremap <C-U> <C-G>u<C-U>$/;"	m
<C-W>	/home/the-commits/.vim/plugged/vim-sensible/plugin/sensible.vim	/^  inoremap <C-W> <C-G>u<C-W>$/;"	m
<C-X>	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^  nmap  <C-X>     <Plug>SpeedDatingDown$/;"	m
<C-X>	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^  xmap  <C-X>     <Plug>SpeedDatingDown$/;"	m
<Leader>p	/home/the-commits/.vimrc	/^  nnoremap <Leader>p :r !xclip -selection clipboard -o<CR>$/;"	m
<Leader>y	/home/the-commits/.vimrc	/^  nnoremap <Leader>y :w !xclip -selection clipboard<CR>$/;"	m
<Plug>(RepeatDot)	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatDot)      :<C-U>if !repeat#run(v:count)<Bar>echoerr repeat#errmsg/;"	m
<Plug>(RepeatRedo)	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^nmap <silent><expr><script> <Plug>(RepeatRedo)     repeat#wrap("\\022",v:count)$/;"	m
<Plug>(RepeatUndo)	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^nmap <silent><expr><script> <Plug>(RepeatUndo)     repeat#wrap('u',v:count)$/;"	m
<Plug>(RepeatUndoLine)	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^nmap <silent><expr><script> <Plug>(RepeatUndoLine) repeat#wrap('U',v:count)$/;"	m
<Plug>CSurround	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>CSurround  :<C-U>call <SID>changesurround(1)<CR>$/;"	m
<Plug>Csurround	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>ISurround	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>SpeedDatingDown	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^nnoremap <silent> <Plug>SpeedDatingDown :<C-U>call speeddating#increment(-v:count1)<CR>$/;"	m
<Plug>SpeedDatingDown	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^xnoremap <silent> <Plug>SpeedDatingDown :<C-U>call speeddating#incrementvisual(-v:count1)<CR>$/;"	m
<Plug>SpeedDatingNowLocal	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^nnoremap <silent> <Plug>SpeedDatingNowLocal :<C-U>call speeddating#timestamp(0,v:count)<CR>$/;"	m
<Plug>SpeedDatingNowUTC	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^nnoremap <silent> <Plug>SpeedDatingNowUTC   :<C-U>call speeddating#timestamp(1,v:count)<CR>$/;"	m
<Plug>SpeedDatingUp	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^nnoremap <silent> <Plug>SpeedDatingUp   :<C-U>call speeddating#increment(v:count1)<CR>$/;"	m
<Plug>SpeedDatingUp	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^xnoremap <silent> <Plug>SpeedDatingUp   :<C-U>call speeddating#incrementvisual(v:count1)<CR>$/;"	m
<Plug>SurroundRepeat	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>VSurround	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 /;"	m
<Plug>VgSurround	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 /;"	m
<Plug>YSsurround	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSsurround <SID>opfunc2('setup').'_'$/;"	m
<Plug>YSurround	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSurround  <SID>opfunc2('setup')$/;"	m
<Plug>Yssurround	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Yssurround '^'.v:count1.<SID>opfunc('setup').'g_'$/;"	m
<Plug>Ysurround	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Ysurround  <SID>opfunc('setup')$/;"	m
<cr>	/home/the-commits/.vim/autoload/plug.vim	/^      nmap <buffer> <cr> <plug>(plug-preview)$/;"	m
<leader>	/home/the-commits/.vimrc	/^nnoremap <silent> <leader>      :<c-u>WhichKey '<Space>'<CR>$/;"	m
<leader>s	/home/the-commits/.vimrc	/^nnoremap <leader>s :source $MYVIMRC \\| :nohlsearch<CR>$/;"	m
<localleader>	/home/the-commits/.vimrc	/^nnoremap <silent> <localleader> :<c-u>WhichKey  ','<CR>$/;"	m
<plug>(plug-preview)	/home/the-commits/.vim/autoload/plug.vim	/^    nnoremap <silent> <buffer> <plug>(plug-preview) :silent! call <SID>preview_commit()<cr>$/;"	m
AutoUpdateVimConfigTagsSimple	/home/the-commits/.vimrc	/^augroup AutoUpdateVimConfigTagsSimple$/;"	a
BASE_PATH	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^BASE_PATH = File.expand_path('..\/plugin_tests\/test_files\/', __FILE__)$/;"	C
Bugs and Feature Requests	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^## Bugs and Feature Requests$/;"	s	chapter:EditorConfig Vim Plugin
Bundled versions	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^## Bundled versions$/;"	s	chapter:EditorConfig Vim Plugin
CTEST_CUSTOM_TESTS_IGNORE	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/CTestCustom.cmake	/^    set(CTEST_CUSTOM_TESTS_IGNORE ${CTEST_CUSTOM_TESTS_IGNORE} g_utf_8_char)$/;"	v
CTEST_CUSTOM_TESTS_IGNORE	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/CTestCustom.cmake	/^    set(CTEST_CUSTOM_TESTS_IGNORE ${CTEST_CUSTOM_TESTS_IGNORE} min_supported_value_length)$/;"	v
CTEST_CUSTOM_TESTS_IGNORE	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/CTestCustom.cmake	/^    set(CTEST_CUSTOM_TESTS_IGNORE ${CTEST_CUSTOM_TESTS_IGNORE} utf_8_char)$/;"	v
Checking for Final Newline	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/insert_final_newline.rst	/^Checking for Final Newline$/;"	c	title:Insert Final Newline Property
Colors are Wrong	/home/the-commits/.vim/plugged/vim-synthwave84/README.md	/^## Colors are Wrong$/;"	s	chapter:Troubleshooting
Commands	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^### Commands$/;"	S	section:vim-which-key""Usage
Configuration	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^### Configuration$/;"	S	section:vim-which-key""Usage
Contributing	/home/the-commits/.vim/plugged/vim-repeat/README.markdown	/^## Contributing$/;"	s	chapter:repeat.vim
Contributing	/home/the-commits/.vim/plugged/vim-sensible/README.markdown	/^## Contributing$/;"	s	chapter:sensible.vim
Contributing	/home/the-commits/.vim/plugged/vim-speeddating/README.markdown	/^## Contributing$/;"	s	chapter:speeddating.vim
Contributing	/home/the-commits/.vim/plugged/vim-surround/README.markdown	/^## Contributing$/;"	s	chapter:surround.vim
Credit	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^## Credit$/;"	s	chapter:vim-which-key
D	/home/the-commits/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> D  :PlugDiff<cr>$/;"	m
D	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^filter global:D($file = $debug) {$/;"	i
DIR	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^$global:DIR = $PSScriptRoot$/;"	v
DiffOrig	/home/the-commits/.vim/plugged/vim-sensible/plugin/sensible.vim	/^  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_$/;"	c
Disable for a specific filetype	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^### Disable for a specific filetype$/;"	S	section:EditorConfig Vim Plugin""Selected Options
Disable rules	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^### Disable rules$/;"	S	section:EditorConfig Vim Plugin""Selected Options
EDITORCONFIG_CMD	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/CMakeLists.txt	/^    set(EDITORCONFIG_CMD "${CMAKE_SOURCE_DIR}\/editorconfig")$/;"	v
EDITORCONFIG_CMD	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/CMakeLists.txt	/^    set(EDITORCONFIG_CMD "${CMAKE_SOURCE_DIR}\/editorconfig.bat")$/;"	v
EDITORCONFIG_CMD	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^    set(EDITORCONFIG_CMD "editorconfig" CACHE STRING "editorconfig command.")$/;"	v
EDITORCONFIG_CMD_IS_TARGET	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/CMakeLists.txt	/^set(EDITORCONFIG_CMD_IS_TARGET FALSE)$/;"	v
EDITORCONFIG_CMD_IS_TARGET	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^    set(EDITORCONFIG_CMD_IS_TARGET OFF CACHE BOOL$/;"	v
EOF	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig	/^helpstr=$(cat<<'EOF'$/;"	h
EOT	/home/the-commits/.vim/plugged/editorconfig-vim/tests/travis-test.sh	/^    cat <<EOT$/;"	h
EditorConfig Vim Plugin	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^# EditorConfig Vim Plugin$/;"	c
EditorConfigDisable	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^command! EditorConfigDisable call s:EditorConfigEnable(0)$/;"	c
EditorConfigEnable	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^command! EditorConfigEnable call s:EditorConfigEnable(1)$/;"	c
EditorConfigReload	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^command! EditorConfigReload call s:UseConfigFiles(0) " Reload EditorConfig files$/;"	c
Example	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^#### Example$/;"	t	subsection:vim-which-key""Usage""Configuration
Excluded patterns	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^### Excluded patterns$/;"	S	section:EditorConfig Vim Plugin""Selected Options
FAQ	/home/the-commits/.vim/plugged/vim-sensible/README.markdown	/^## FAQ$/;"	s	chapter:sensible.vim
FAQ	/home/the-commits/.vim/plugged/vim-surround/README.markdown	/^## FAQ$/;"	s	chapter:surround.vim
FAQ	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^### FAQ$/;"	S	section:vim-which-key""Usage
Features	/home/the-commits/.vim/plugged/vim-sensible/README.markdown	/^## Features$/;"	s	chapter:sensible.vim
Find-Vim	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^function global:Find-Vim$/;"	f
Finding Trailing Whitespace	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Finding Trailing Whitespace$/;"	c	title:Trim Trailing Whitespace Property
Hide statusline	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^#### Hide statusline$/;"	t	subsection:vim-which-key""Usage""Configuration
How to map lua functions?	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^#### How to map lua functions?$/;"	t	subsection:vim-which-key""Usage""FAQ
How to map some special keys like `<BS>`?	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^#### How to map some special keys like `<BS>`?$/;"	t	subsection:vim-which-key""Usage""FAQ
How to set keybindings on filetype or other condition?	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^#### How to set keybindings on filetype or other condition?$/;"	t	subsection:vim-which-key""Usage""FAQ
Insert Final Newline Property	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/insert_final_newline.rst	/^Insert Final Newline Property$/;"	H
Install as Vim8 plugin	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^### Install as Vim8 plugin$/;"	S	section:EditorConfig Vim Plugin""Installation
Install with [Vundle][]	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^### Install with [Vundle][]$/;"	S	section:EditorConfig Vim Plugin""Installation
Install with [pathogen][]	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^### Install with [pathogen][]$/;"	S	section:EditorConfig Vim Plugin""Installation
Install with [vim-plug][]	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^### Install with [vim-plug][]$/;"	S	section:EditorConfig Vim Plugin""Installation
Install with the archive	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^### Install with the archive$/;"	S	section:EditorConfig Vim Plugin""Installation
Installation	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^## Installation$/;"	s	chapter:EditorConfig Vim Plugin
Installation	/home/the-commits/.vim/plugged/vim-repeat/README.markdown	/^## Installation$/;"	s	chapter:repeat.vim
Installation	/home/the-commits/.vim/plugged/vim-sensible/README.markdown	/^## Installation$/;"	s	chapter:sensible.vim
Installation	/home/the-commits/.vim/plugged/vim-speeddating/README.markdown	/^## Installation$/;"	s	chapter:speeddating.vim
Installation	/home/the-commits/.vim/plugged/vim-surround/README.markdown	/^## Installation$/;"	s	chapter:surround.vim
Installation	/home/the-commits/.vim/plugged/vim-synthwave84/README.md	/^# Installation$/;"	c
Installation	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^## Installation$/;"	s	chapter:vim-which-key
Introduction	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^## Introduction$/;"	s	chapter:vim-which-key
JavaScript	/home/the-commits/.vim/plugged/vim-synthwave84/README.md	/^### JavaScript$/;"	S	section:Synthwave 84 Vim theme""Screenshots
L	/home/the-commits/.vim/autoload/plug.vim	/^    nnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	/home/the-commits/.vim/autoload/plug.vim	/^    xnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/meta/CMakeLists.txt	/^set(L "[ \\t\\n\\r]+")$/;"	v
Latin1 Character Set	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^Latin1 Character Set$/;"	s	chapter:Tests for Newlines
Latin1 Character Set with Unicode	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^Latin1 Character Set with Unicode$/;"	s	chapter:Tests for Newlines
License	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/README.rst	/^License$/;"	c	title:Tests for EditorConfig Plugins
License	/home/the-commits/.vim/plugged/vim-repeat/README.markdown	/^## License$/;"	s	chapter:repeat.vim
License	/home/the-commits/.vim/plugged/vim-sensible/README.markdown	/^## License$/;"	s	chapter:sensible.vim
License	/home/the-commits/.vim/plugged/vim-speeddating/README.markdown	/^## License$/;"	s	chapter:speeddating.vim
License	/home/the-commits/.vim/plugged/vim-surround/README.markdown	/^## License$/;"	s	chapter:surround.vim
Minimal Configuration	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^#### Minimal Configuration$/;"	t	subsection:vim-which-key""Usage""Configuration
NeoVim	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^#### NeoVim$/;"	t	subsection:vim-which-key""Installation""Package management
No external editorconfig core library is required	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^### No external editorconfig core library is required$/;"	S	section:EditorConfig Vim Plugin""Installation
Not Trimming Whitespace	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Not Trimming Whitespace$/;"	c	title:Trim Trailing Whitespace Property
Old Mac-style Newlines	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Old Mac-style Newlines$/;"	s	chapter:Tests for Newlines
Option 1: Manual	/home/the-commits/.vim/plugged/vim-synthwave84/README.md	/^## Option 1: Manual$/;"	s	chapter:Installation
Option 2: vim-plug	/home/the-commits/.vim/plugged/vim-synthwave84/README.md	/^## Option 2: vim-plug$/;"	s	chapter:Installation
Options	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^### Options$/;"	S	section:vim-which-key""Usage
Package management	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^### Package management$/;"	S	section:vim-which-key""Installation
Plug	/home/the-commits/.vim/autoload/plug.vim	/^  command! -nargs=+ -bar Plug call plug#(<args>)$/;"	c
PlugClean	/home/the-commits/.vim/autoload/plug.vim	/^  command! -nargs=0 -bar -bang PlugClean call s:clean(<bang>0)$/;"	c
PlugDiff	/home/the-commits/.vim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugDiff    call s:diff()$/;"	c
PlugInstall	/home/the-commits/.vim/autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugInstall call s:install(<bang>0, /;"	c
PlugLOD	/home/the-commits/.vim/autoload/plug.vim	/^    augroup PlugLOD$/;"	a
PlugSnapshot	/home/the-commits/.vim/autoload/plug.vim	/^  command! -nargs=? -bar -bang -complete=file PlugSnapshot call s:snapshot(<bang>0, <f-args>)$/;"	c
PlugStatus	/home/the-commits/.vim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugStatus  call s:status()$/;"	c
PlugUpdate	/home/the-commits/.vim/autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugUpdate  call s:update(<bang>0, [/;"	c
PlugUpgrade	/home/the-commits/.vim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugUpgrade if s:upgrade() | execute 'source' s:esc(s:me) | endif$/;"	c
Plugin Manager	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^### Plugin Manager$/;"	S	section:vim-which-key""Installation
Pros.	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^## Pros.$/;"	s	chapter:vim-which-key
R	/home/the-commits/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> R  :call <SID>retry()<cr>$/;"	m
Requirement	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^## Requirement$/;"	s	chapter:vim-which-key
Ruby	/home/the-commits/.vim/plugged/vim-synthwave84/README.md	/^### Ruby$/;"	S	section:Synthwave 84 Vim theme""Screenshots
Running Tests	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/README.rst	/^Running Tests$/;"	c	title:Tests for EditorConfig Plugins
S	/home/the-commits/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> S  :PlugStatus<cr>$/;"	m
S	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^  xmap S   <Plug>VSurround$/;"	m
Screenshots	/home/the-commits/.vim/plugged/vim-synthwave84/README.md	/^## Screenshots$/;"	s	chapter:Synthwave 84 Vim theme
Selected Options	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^## Selected Options$/;"	s	chapter:EditorConfig Vim Plugin
Self-Promotion	/home/the-commits/.vim/plugged/vim-repeat/README.markdown	/^## Self-Promotion$/;"	s	chapter:repeat.vim
Self-Promotion	/home/the-commits/.vim/plugged/vim-sensible/README.markdown	/^## Self-Promotion$/;"	s	chapter:sensible.vim
Self-Promotion	/home/the-commits/.vim/plugged/vim-speeddating/README.markdown	/^## Self-Promotion$/;"	s	chapter:speeddating.vim
Self-Promotion	/home/the-commits/.vim/plugged/vim-surround/README.markdown	/^## Self-Promotion$/;"	s	chapter:surround.vim
Space-based indentation	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Space-based indentation$/;"	c	title:Tests for Indentation Properties
Space-based indentation with no size specified	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Space-based indentation with no size specified$/;"	s	chapter:Space-based indentation
Special keys	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^### Special keys$/;"	S	section:vim-which-key""Usage
SpeedDatingFormat	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^command! -bar -bang -count=0 -nargs=? SpeedDatingFormat :call s:add_format(<q-args>,<count>,<ban/;"	c
Supported properties	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^## Supported properties$/;"	s	chapter:EditorConfig Vim Plugin
Synthwave 84 Vim theme	/home/the-commits/.vim/plugged/vim-synthwave84/README.md	/^# Synthwave 84 Vim theme$/;"	c
Tab-based indentation	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation$/;"	c	title:Tests for Indentation Properties
Tab-based indentation with no size specified	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation with no size specified$/;"	s	chapter:Tab-based indentation
Tab-based indentation with size of 4	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation with size of 4$/;"	s	chapter:Tab-based indentation
Tab-based indentation with size of 4 and tab width of 8	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation with size of 4 and tab width of 8$/;"	s	chapter:Tab-based indentation
Test for Newline	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/insert_final_newline.rst	/^Test for Newline$/;"	s	chapter:Tests for Newline at end of File
Test for No Newline	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/insert_final_newline.rst	/^Test for No Newline$/;"	s	chapter:Tests for Newline at end of File
Tests for EditorConfig Plugins	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/README.rst	/^Tests for EditorConfig Plugins$/;"	H
Tests for End of Line Property	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Tests for End of Line Property$/;"	H
Tests for Indentation Properties	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Tests for Indentation Properties$/;"	H
Tests for Newline at end of File	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/insert_final_newline.rst	/^Tests for Newline at end of File$/;"	c	title:Insert Final Newline Property
Tests for Newlines	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^Tests for Newlines$/;"	c
Tests for Newlines	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Tests for Newlines$/;"	c	title:Tests for End of Line Property
Trim Trailing Whitespace Property	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Trim Trailing Whitespace Property$/;"	H
Trimming Whitespace	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Trimming Whitespace$/;"	c	title:Trim Trailing Whitespace Property
Troubleshooting	/home/the-commits/.vim/plugged/vim-synthwave84/README.md	/^# Troubleshooting$/;"	c
U	/home/the-commits/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	/home/the-commits/.vim/autoload/plug.vim	/^  xnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^    nmap U <Plug>(RepeatUndoLine)$/;"	m
UTF-16BE Character Set	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^UTF-16BE Character Set$/;"	s	chapter:Tests for Newlines
UTF-16LE Character Set	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^UTF-16LE Character Set$/;"	s	chapter:Tests for Newlines
UTF-8 Character Set	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^UTF-8 Character Set$/;"	s	chapter:Tests for Newlines
UTF-8 with BOM Character Set	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^UTF-8 with BOM Character Set$/;"	s	chapter:Tests for Newlines
Unix-style Newlines	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Unix-style Newlines$/;"	s	chapter:Tests for Newlines
Usage	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^## Usage$/;"	s	chapter:vim-which-key
Use editorconfig-core-test in your project as a git submodule	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/README.md	/^### Use editorconfig-core-test in your project as a git submodule$/;"	S
Use editorconfig-core-test independently	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/README.md	/^### Use editorconfig-core-test independently$/;"	S
VIM	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^$global:VIM = Find-Vim$/;"	v
Verifying Character Set	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^Verifying Character Set$/;"	c
Verifying Newline Style	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Verifying Newline Style$/;"	c	title:Tests for End of Line Property
Version Supported	/home/the-commits/.vim/plugged/editorconfig-vim/README.md	/^### Version Supported$/;"	S	section:EditorConfig Vim Plugin""Installation
Vim 8	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^#### Vim 8$/;"	t	subsection:vim-which-key""Installation""Package management
Vim script	/home/the-commits/.vim/plugged/vim-synthwave84/README.md	/^### Vim script$/;"	S	section:Synthwave 84 Vim theme""Screenshots
WhichKey	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^command! -bang -nargs=1 WhichKey call which_key#start(0, <bang>0, <args>)$/;"	c
WhichKeyVisual	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^command! -bang -nargs=1 -range WhichKeyVisual call which_key#start(1, <bang>0, <args>)$/;"	c
Windows-style Newlines	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Windows-style Newlines$/;"	s	chapter:Tests for Newlines
X	/home/the-commits/.vim/autoload/plug.vim	/^    nnoremap <silent> <buffer> X :call <SID>revert()<cr>$/;"	m
[[	/home/the-commits/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> [[ :silent! call <SID>section('b')<cr>$/;"	m
]]	/home/the-commits/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> ]] :silent! call <SID>section('')<cr>$/;"	m
`timeoutlen`	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^### `timeoutlen`$/;"	S	section:vim-which-key""Usage
a	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^    $a = $argv[$idx]$/;"	v
argesc	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^function global:argesc($arg) {$/;"	f
argv	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$argv = @(de64_args($args))$/;"	v
b:current_syntax	/home/the-commits/.vim/plugged/vim-which-key/syntax/which_key.vim	/^let b:current_syntax = 'which_key'$/;"	v
basic_args	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$basic_args = '-nNes','-i','NONE','-u','NONE','-U','NONE'   #, '-V1'$/;"	v
cS	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^  nmap cS  <Plug>CSurround$/;"	m
chars	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^        $chars = ''$/;"	v
cmd	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$cmd = ''$/;"	v
config_name	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^                $config_name = $argv[$idx]$/;"	v
config_name	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$config_name = '.editorconfig'$/;"	v
cr.txt	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    it 'cr.txt' do$/;"	i	describe:plugin/editorconfig.vim
create_vim	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^def create_vim(*initial_commands)$/;"	f
crlf.txt	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    it 'crlf.txt' do$/;"	i	describe:plugin/editorconfig.vim
cs	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
d	/home/the-commits/.vim/autoload/plug.vim	/^      nnoremap <silent> <buffer> d :set opfunc=<sid>delete_op<cr>g@$/;"	m
d	/home/the-commits/.vim/autoload/plug.vim	/^      xnoremap <silent> <buffer> d :<c-u>call <sid>delete_op(visualmode(), 1)<cr>$/;"	m
d<C-A>	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^  nmap d<C-A>     <Plug>SpeedDatingNowUTC$/;"	m
d<C-X>	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^  nmap d<C-X>     <Plug>SpeedDatingNowLocal$/;"	m
dd	/home/the-commits/.vim/autoload/plug.vim	/^      nmap     <silent> <buffer> dd d_$/;"	m
de64_args	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^function de64_args($argv) {$/;"	f
debug	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^    $global:debug="${DIR}\/${global:debug}"$/;"	v
debug	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^$global:debug=$env:EDITORCONFIG_DEBUG  # Debug filename$/;"	v
default	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/Rakefile	/^task :default => :spec$/;"	t
ds	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
editorconfig	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    augroup editorconfig$/;"	a
editorconfig#AddNewHook	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig.vim	/^function! editorconfig#AddNewHook(func) " {{{1$/;"	f
editorconfig#ApplyHooks	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig.vim	/^function! editorconfig#ApplyHooks(config) abort " {{{1$/;"	f
editorconfig-core-test	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^project(editorconfig-core-test NONE)$/;"	p
editorconfig-core-vimscript	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/CMakeLists.txt	/^project(editorconfig-core-vimscript NONE)$/;"	p
editorconfig_core#currbuf_cli	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core.vim	/^function! editorconfig_core#currbuf_cli(names, job) " out_name, in_name, ...$/;"	f
editorconfig_core#fnmatch#fnmatch	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! editorconfig_core#fnmatch#fnmatch(name, path, pattern)$/;"	f
editorconfig_core#fnmatch#fnmatchcase	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! editorconfig_core#fnmatch#fnmatchcase(name, path, pattern)$/;"	f
editorconfig_core#fnmatch#translate	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! editorconfig_core#fnmatch#translate(pat, ...)$/;"	f
editorconfig_core#handler#get_configurations	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! editorconfig_core#handler#get_configurations(job)$/;"	f
editorconfig_core#ini#read_ini_file	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! editorconfig_core#ini#read_ini_file(config_filename, target_filename)$/;"	f
editorconfig_core#util#Separator	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#Separator()$/;"	f
editorconfig_core#util#is_win	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#is_win()$/;"	f
editorconfig_core#util#path_join	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#path_join(a, b)$/;"	f
editorconfig_core#util#strip	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#strip(s)$/;"	f
editorconfig_core#version	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core.vim	/^function! editorconfig_core#version()$/;"	f
editorconfig_trim_trailing_whitespace	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    augroup editorconfig_trim_trailing_whitespace$/;"	a
ep_out	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^        set(ep_out "${ep_stderr}")$/;"	v	function:run_and_sort
ep_out	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^        set(ep_out "${ep_stdout}")$/;"	v	function:run_and_sort
extra_info	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^                $extra_info = $argv[$idx]$/;"	v
extra_info	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$extra_info = ''$/;"	v
files	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$files=@()$/;"	v
filetypedetect	/home/the-commits/.vim/autoload/plug.vim	/^        augroup filetypedetect$/;"	a
fn	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$fn=[System.IO.Path]::GetTempFileName();$/;"	v
g:EditorConfig_disable_rules	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_disable_rules = []$/;"	v
g:EditorConfig_enable_for_new_buf	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_enable_for_new_buf = 0$/;"	v
g:EditorConfig_exclude_patterns	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_exclude_patterns = []$/;"	v
g:EditorConfig_exec_path	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_exec_path = ''$/;"	v
g:EditorConfig_max_line_indicator	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_max_line_indicator = 'line'$/;"	v
g:EditorConfig_preserve_formatoptions	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_preserve_formatoptions = 0$/;"	v
g:EditorConfig_softtabstop_space	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_softtabstop_space = 1$/;"	v
g:EditorConfig_softtabstop_tab	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_softtabstop_tab = 1$/;"	v
g:EditorConfig_verbose	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_verbose = 0$/;"	v
g:WhichKeyFormatFunc	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:WhichKeyFormatFunc = get(g:, 'WhichKeyFormatFunc', function('which_key#format'))$/;"	v
g:_plug_bang	/home/the-commits/.vim/autoload/plug.vim	/^    let g:_plug_bang = (s:is_win && has('gui_running') ? 'silent ' : '').'!'.escape(cmd, '#!%')$/;"	v
g:airline#themes#synthwave84#palette	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let g:airline#themes#synthwave84#palette = {}$/;"	v
g:airline#themes#synthwave84#palette	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let g:airline#themes#synthwave84#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:C/;"	v
g:airline#themes#synthwave84#palette	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let g:airline#themes#synthwave84#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA/;"	v
g:airline#themes#synthwave84#palette	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let g:airline#themes#synthwave84#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, /;"	v
g:airline#themes#synthwave84#palette	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let g:airline#themes#synthwave84#palette.insert.airline_error = s:ERROR$/;"	v
g:airline#themes#synthwave84#palette	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let g:airline#themes#synthwave84#palette.insert.airline_warning = s:WARNING$/;"	v
g:airline#themes#synthwave84#palette	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let g:airline#themes#synthwave84#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, /;"	v
g:airline#themes#synthwave84#palette	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let g:airline#themes#synthwave84#palette.normal.airline_error = s:ERROR$/;"	v
g:airline#themes#synthwave84#palette	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let g:airline#themes#synthwave84#palette.normal.airline_warning = s:WARNING$/;"	v
g:airline#themes#synthwave84#palette	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let g:airline#themes#synthwave84#palette.replace = airline#themes#generate_color_map(s:R1, s:R2,/;"	v
g:airline#themes#synthwave84#palette	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let g:airline#themes#synthwave84#palette.replace.airline_error = s:ERROR$/;"	v
g:airline#themes#synthwave84#palette	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let g:airline#themes#synthwave84#palette.replace.airline_warning = s:WARNING$/;"	v
g:airline#themes#synthwave84#palette	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let g:airline#themes#synthwave84#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, /;"	v
g:airline#themes#synthwave84#palette	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let g:airline#themes#synthwave84#palette.visual.airline_error = s:ERROR$/;"	v
g:airline#themes#synthwave84#palette	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let g:airline#themes#synthwave84#palette.visual.airline_warning = s:WARNING$/;"	v
g:colors_name	/home/the-commits/.vim/plugged/vim-synthwave84/colors/synthwave84.vim	/^let g:colors_name = 'synthwave84'$/;"	v
g:days_full	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let g:days_full = s:days_full$/;"	v
g:editorconfig_core_vimscript_debug	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core.vim	/^        let g:editorconfig_core_vimscript_debug = 1$/;"	v
g:editorconfig_core_vimscript_debug	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core.vim	/^    let g:editorconfig_core_vimscript_debug = 0$/;"	v
g:editorconfig_core_vimscript_debug	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^    let g:editorconfig_core_vimscript_debug = 0$/;"	v
g:editorconfig_core_vimscript_debug	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^    let g:editorconfig_core_vimscript_debug = 0$/;"	v
g:is_posix	/home/the-commits/.vim/plugged/vim-sensible/plugin/sensible.vim	/^  let g:is_posix = 1$/;"	v
g:loaded_EditorConfig	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^let g:loaded_EditorConfig = 1$/;"	v
g:loaded_plug	/home/the-commits/.vim/autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:loaded_repeat	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_sensible	/home/the-commits/.vim/plugged/vim-sensible/plugin/sensible.vim	/^  let g:loaded_sensible = 'yes'$/;"	v
g:loaded_speeddating	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^let g:loaded_speeddating = 1$/;"	v
g:loaded_surround	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_vim_which_key	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:loaded_vim_which_key = 1$/;"	v
g:mapleader	/home/the-commits/.vimrc	/^let g:mapleader="\\<Space>"$/;"	v
g:maplocalleader	/home/the-commits/.vimrc	/^let g:maplocalleader=','$/;"	v
g:plug_home	/home/the-commits/.vim/autoload/plug.vim	/^  let g:plug_home = home$/;"	v
g:plugs	/home/the-commits/.vim/autoload/plug.vim	/^    let g:plugs[name] = spec$/;"	v
g:plugs	/home/the-commits/.vim/autoload/plug.vim	/^  let g:plugs = {}$/;"	v
g:plugs_order	/home/the-commits/.vim/autoload/plug.vim	/^  let g:plugs_order = []$/;"	v
g:plugs_order	/home/the-commits/.vim/autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:repeat_count	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^    let g:repeat_count = a:0 ? a:1 : v:count$/;"	v
g:repeat_reg	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^    let g:repeat_reg = [a:sequence, a:register]$/;"	v
g:repeat_reg	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^let g:repeat_reg = ['', '']$/;"	v
g:repeat_sequence	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^    let g:repeat_sequence = a:sequence$/;"	v
g:repeat_tick	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^    let g:repeat_tick = -1$/;"	v
g:repeat_tick	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^    let g:repeat_tick = b:changedtick$/;"	v
g:repeat_tick	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:speeddating_formats	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^    let g:speeddating_formats += [[a:master,a:count,a:bang]]$/;"	v
g:speeddating_formats	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^let g:speeddating_formats = []$/;"	v
g:speeddating_handlers	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let g:speeddating_handlers += [{'regexp': '-\\=\\<\\d\\+\\%(st\\|nd\\|rd\\|th\\)\\>', 'increment/;"	v
g:speeddating_handlers	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^let g:speeddating_handlers = []$/;"	v
g:speeddating_loaded_formats	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^  let g:speeddating_loaded_formats = 1$/;"	v
g:speeddating_zone	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^    let g:speeddating_zone = get({-8:'PST',-7:'MST',-6:'CST',-5:'EST',0:'WET',1:'CET',2:'EET'},s/;"	v
g:speeddating_zone	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^  let g:speeddating_zone = strftime("%Z",30*365*86400)$/;"	v
g:speeddating_zone_dst	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^      let g:speeddating_zone_dst = g:speeddating_zone$/;"	v
g:speeddating_zone_dst	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^      let g:speeddating_zone_dst = get({-7:'PDT',-6:'MDT',-5:'CDT',-4:'EDT',1:'WEST',2:'CEST',3:/;"	v
g:speeddating_zone_dst	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^  let g:speeddating_zone_dst = strftime("%Z",(180+30*365)*86400)$/;"	v
g:terminal_ansi_colors	/home/the-commits/.vim/plugged/vim-synthwave84/colors/synthwave84.vim	/^  let g:terminal_ansi_colors = ['Black', 'DarkRed', 'DarkGreen', 'DarkYellow',$/;"	v
g:which_key#TYPE	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^let g:which_key#TYPE = s:TYPE$/;"	v
g:which_key_align_by_seperator	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_align_by_seperator = get(g:, 'which_key_align_by_seperator', 1)$/;"	v
g:which_key_centered	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_centered = get(g:, 'which_key_centered', 1)$/;"	v
g:which_key_default_group_name	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_default_group_name = get(g:, 'which_key_default_group_name', '+prefix')$/;"	v
g:which_key_disable_default_offset	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_disable_default_offset = get(g:, 'which_key_disable_default_offset', 0)$/;"	v
g:which_key_fallback_to_native_key	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_fallback_to_native_key = get(g:, 'which_key_fallback_to_native_key', 0)$/;"	v
g:which_key_flatten	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_flatten = get(g:, 'which_key_flatten', 1)$/;"	v
g:which_key_floating_relative_win	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_floating_relative_win = get(g:, 'which_key_floating_relative_win', 0)$/;"	v
g:which_key_group_dicts	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_group_dicts = get(g:, 'which_key_group_dicts', 'end')$/;"	v
g:which_key_hspace	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_hspace = get(g:, 'which_key_hspace', 5)$/;"	v
g:which_key_ignore_invalid_key	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_ignore_invalid_key = get(g:, 'which_key_ignore_invalid_key', 1)$/;"	v
g:which_key_ignore_outside_mappings	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_ignore_outside_mappings = get(g:, 'which_key_ignore_outside_mappings', 0)$/;"	v
g:which_key_map	/home/the-commits/.vim/autoload/which_key_mapping_tags.vim	/^    let g:which_key_map = {}$/;"	v
g:which_key_map	/home/the-commits/.vim/autoload/which_key_mapping_tags.vim	/^  let g:which_key_map['t'] = {$/;"	v
g:which_key_map	/home/the-commits/.vim/autoload/which_key_mapping_windows.vim	/^    let g:which_key_map = {}$/;"	v
g:which_key_map	/home/the-commits/.vim/autoload/which_key_mapping_windows.vim	/^  let g:which_key_map['w'] = {$/;"	v
g:which_key_max_size	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_max_size = get(g:, 'which_key_max_size', 0)$/;"	v
g:which_key_origin_winid	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^    let g:which_key_origin_winid = win_getid()$/;"	v
g:which_key_position	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_position = get(g:, 'which_key_position', 'botright')$/;"	v
g:which_key_run_map_on_popup	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_run_map_on_popup = get(g:, 'which_key_run_map_on_popup', 1)$/;"	v
g:which_key_sep	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_sep = get(g:, 'which_key_sep', '→')$/;"	v
g:which_key_sort_horizontal	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_sort_horizontal = get(g:, 'which_key_sort_horizontal', 0)$/;"	v
g:which_key_timeout	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_timeout = get(g:, 'which_key_timeout', &timeoutlen)$/;"	v
g:which_key_use_floating_win	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_use_floating_win = (exists('*nvim_open_win') || exists('*popup_create')) && get(/;"	v
g:which_key_vertical	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_vertical = get(g:, 'which_key_vertical', 0)$/;"	v
gS	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^  xmap gS  <Plug>VgSurround$/;"	m
get_dir	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig	/^function get_dir()$/;"	f
here	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig.bat	/^set here=%~dp0$/;"	v
idx	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$idx = 0$/;"	v
latin1.txt	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    it 'latin1.txt' do$/;"	i	describe:plugin/editorconfig.vim
lf.txt	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    it 'lf.txt' do$/;"	i	describe:plugin/editorconfig.vim
line_numbers#ToggleLineNumbers	/home/the-commits/.vim/autoload/line_numbers.vim	/^function! line_numbers#ToggleLineNumbers()$/;"	f
main	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/test_files/4_space.py	/^def main():$/;"	f
multi_value_keywords	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^    set(multi_value_keywords ARGS)$/;"	v	function:new_ec_cli_test
multi_value_keywords	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^    set(multi_value_keywords CMDLINE ARGS)$/;"	v	function:run_and_sort
new_ec_cli_test	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^function(new_ec_cli_test)$/;"	f
new_ec_test	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^function(new_ec_test name ec_file src_file regex)$/;"	f
new_ec_test_full_ec_file_path	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^function(new_ec_test_full_ec_file_path name ec_file src_file regex)$/;"	f
new_ec_test_multiline	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^function(new_ec_test_multiline name ec_file src_file regex)$/;"	f
new_ec_test_version	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^function(new_ec_test_version name ec_file src_file regex version)$/;"	f
numbertoggle	/home/the-commits/.vim/autoload/line_numbers.vim	/^  augroup numbertoggle$/;"	a
o	/home/the-commits/.vim/autoload/plug.vim	/^      nmap <buffer> o <plug>(plug-preview)$/;"	m
one_value_keywords	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^    set(one_value_keywords NAME MATCH)$/;"	v	function:new_ec_cli_test
one_value_keywords	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^    set(one_value_keywords RETVAL RETVAL_FAILURE)$/;"	v	function:run_and_sort
option_keywords	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^    set(option_keywords CAPTURE_STDERR TRIM_INITIAL_LEADING_SPACE)$/;"	v	function:run_and_sort
output	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^        $output = ""$/;"	v
path_separator_backslash_in_cmd_line_regex	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/filetree/CMakeLists.txt	/^    set(path_separator_backslash_in_cmd_line_regex "^[ \\t\\n\\r]*$")$/;"	v
path_separator_backslash_in_cmd_line_regex	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/filetree/CMakeLists.txt	/^    set(path_separator_backslash_in_cmd_line_regex "^key1=value1[ \\t\\n\\r]*$")$/;"	v
plug#	/home/the-commits/.vim/autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	/home/the-commits/.vim/autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	/home/the-commits/.vim/autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	/home/the-commits/.vim/autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	/home/the-commits/.vim/autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug#shellescape	/home/the-commits/.vim/autoload/plug.vim	/^function! plug#shellescape(arg, ...)$/;"	f
plugin/editorconfig.vim	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^  describe 'plugin\/editorconfig.vim' do$/;"	d
q	/home/the-commits/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> q :call <SID>close_pane()<cr>$/;"	m
q	/home/the-commits/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> q :q<cr>$/;"	m
repeat#errmsg	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#errmsg()$/;"	f
repeat#invalidate	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#invalidate()$/;"	f
repeat#run	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#run(count)$/;"	f
repeat#set	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeat#setreg	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#setreg(sequence,register)$/;"	f
repeat#wrap	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#wrap(command,count)$/;"	f
repeat.vim	/home/the-commits/.vim/plugged/vim-repeat/README.markdown	/^# repeat.vim$/;"	c
repeatPlugin	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^augroup repeatPlugin$/;"	a
repeat_custom_motion	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^    augroup repeat_custom_motion$/;"	a
report_version	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^        '^(-v|--version)$' { $report_version = $true }$/;"	v
report_version	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$report_version = $false$/;"	v
run_and_sort	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^function(run_and_sort)$/;"	f
run_process	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^function global:run_process$/;"	f
s:ApplyConfig	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:ApplyConfig(bufnr, config) abort$/;"	f
s:CP1	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:CP1 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:cterm01 ]$/;"	v
s:CP2	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:CP2 = [ s:guiWhite , s:gui02 , s:ctermWhite , s:cterm02 ]$/;"	v
s:CP3	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:CP3 = [ s:guiWhite , s:gui08 , s:ctermWhite , s:cterm08 ]$/;"	v
s:DisableShellSlash	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:DisableShellSlash(bufnr) " {{{2$/;"	f
s:ERROR	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:ERROR = [ s:guiWhite, s:gui05, s:ctermWhite, s:cterm05 ]$/;"	v
s:EditorConfigEnable	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:EditorConfigEnable(should_enable)$/;"	f
s:GetFilenames	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:GetFilenames(path, filename) " {{{1$/;"	f
s:I1	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:I1 = [ s:guiBlack , s:gui07 , s:ctermBlack , s:cterm07 ]$/;"	v
s:I2	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:I2 = [ s:guiWhite , s:gui02 , s:ctermWhite , s:cterm02 ]$/;"	v
s:I3	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:I3 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:cterm01 ]$/;"	v
s:IA	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:IA = [ s:IN1[1] , s:IN2[1] , s:IN1[3] , s:IN2[3] , '' ]$/;"	v
s:IN1	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:IN1 = [ s:gui04 , s:gui02 , s:cterm04 , s:cterm02 ]$/;"	v
s:IN2	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:IN2 = [ s:gui04 , s:gui01 , s:cterm04  , s:cterm01 ]$/;"	v
s:Initialize	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:Initialize() " Initialize the plugin.  {{{1$/;"	f
s:InitializeExternalCommand	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:InitializeExternalCommand()$/;"	f
s:InitializeVimCore	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:InitializeVimCore()$/;"	f
s:IsRuleActive	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:IsRuleActive(name, config) " {{{1$/;"	f
s:KEYCODES	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^let s:KEYCODES = {$/;"	v
s:LEFT_BRACE	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:LEFT_BRACE = '\\v[\\\\]@8<!\\{'$/;"	v
s:MAX_PROPERTY_NAME	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:MAX_PROPERTY_NAME = 1024$/;"	v
s:MAX_PROPERTY_VALUE	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:MAX_PROPERTY_VALUE = 4096$/;"	v
s:MAX_SECTION_NAME	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:MAX_SECTION_NAME = 4096$/;"	v
s:MERGE_INTO	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^let s:MERGE_INTO = {$/;"	v
s:MaySet	/home/the-commits/.vim/plugged/vim-sensible/plugin/sensible.vim	/^function! s:MaySet(option) abort$/;"	f
s:N1	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:N1 = [ s:guiBlack , s:gui08 , s:ctermBlack , s:cterm08 ]$/;"	v
s:N2	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:N2 = [ s:guiWhite , s:gui02 , s:ctermWhite , s:cterm02 ]$/;"	v
s:N3	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:N3 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:cterm01 ]$/;"	v
s:NUMERIC_RANGE	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:NUMERIC_RANGE = '\\v([+-]?\\d+)' . '\\.\\.' . '([+-]?\\d+)'$/;"	v
s:OPTCRE	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:OPTCRE = '\\v\\s*([^:=[:space:]][^:=]*)\\s*([:=])\\s*(.*)$'$/;"	v
s:R1	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:R1 = [ s:guiBlack , s:gui05 , s:ctermWhite, s:cterm05 ]$/;"	v
s:R2	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:R2 = [ s:guiWhite , s:gui02 , s:ctermWhite, s:cterm02 ]$/;"	v
s:R3	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:R3 = [ s:guiWhite , s:gui01 , s:ctermWhite, s:cterm01 ]$/;"	v
s:REQUIRES_REGEX_ESCAPE	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^let s:REQUIRES_REGEX_ESCAPE = ['$', '*', '~', '.']$/;"	v
s:RIGHT_BRACE	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:RIGHT_BRACE = '\\v[\\\\]@8<!\\}'$/;"	v
s:ResetShellSlash	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:ResetShellSlash(bufnr) " {{{2$/;"	f
s:SECTCRE	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:SECTCRE = '\\v^\\s*\\[(%([^\\\\#;]|\\\\.)+)\\]'$/;"	v
s:SetCharset	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:SetCharset(bufnr, charset) abort " apply config['charset']$/;"	f
s:SpawnExternalParser	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:SpawnExternalParser(bufnr, cmd, target) " {{{2$/;"	f
s:TYPE	/home/the-commits/.vim/autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:TYPE	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^let s:TYPE = {$/;"	v
s:TYPE	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^let s:TYPE = g:which_key#TYPE$/;"	v
s:TYPE	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/mappings.vim	/^let s:TYPE = g:which_key#TYPE$/;"	v
s:TYPE	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/renderer.vim	/^let s:TYPE = g:which_key#TYPE$/;"	v
s:TrimTrailingWhitespace	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:TrimTrailingWhitespace() " {{{1$/;"	f
s:UpdateVimConfigTagsSimple	/home/the-commits/.vimrc	/^function! s:UpdateVimConfigTagsSimple()$/;"	f
s:UseConfigFiles	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles(from_autocmd) abort " Apply config to the current buffer {{{1$/;"	f
s:UseConfigFiles_ExternalCommand	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles_ExternalCommand(bufnr, target)$/;"	f
s:UseConfigFiles_VimCore	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles_VimCore(bufnr, target)$/;"	f
s:V1	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:V1 = [ s:guiBlack , s:gui06 , s:ctermBlack , s:cterm06 ]$/;"	v
s:V2	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:V2 = [ s:guiWhite , s:gui02 , s:ctermWhite , s:cterm02 ]$/;"	v
s:V3	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:V3 = [ s:guiWhite , s:gui01 , s:ctermWhite, s:cterm01 ]$/;"	v
s:WARNING	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:WARNING = [ s:guiBlack, s:gui03, s:ctermBlack, s:cterm03 ]$/;"	v
s:_cache	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:_cache = {}$/;"	v
s:a2r	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:a2r = [[1000, 'm'], [900, 'cm'], [500, 'd'], [400, 'cd'], [100, 'c'],$/;"	v
s:add_format	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^function! s:add_format(master, count, bang) abort$/;"	f
s:add_map_to_dict	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:add_map_to_dict(map, level, dict) " {{{$/;"	f
s:append_prompt	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:append_prompt(rows) abort$/;"	f
s:append_ul	/home/the-commits/.vim/autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
s:apply_custom_floating_opts	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:apply_custom_floating_opts(opts) abort$/;"	f
s:applymodifer	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:applymodifer(number, modifier, width) abort$/;"	f
s:arabic2roman	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:arabic2roman(arabic) abort$/;"	f
s:ary2pat	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:ary2pat(array) abort$/;"	f
s:ask	/home/the-commits/.vim/autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
s:ask_no_interrupt	/home/the-commits/.vim/autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
s:assign_name	/home/the-commits/.vim/autoload/plug.vim	/^function! s:assign_name()$/;"	f
s:assoc	/home/the-commits/.vim/autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
s:bang	/home/the-commits/.vim/autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
s:bar	/home/the-commits/.vim/autoload/plug.vim	/^function! s:bar()$/;"	f
s:base_spec	/home/the-commits/.vim/autoload/plug.vim	/^let s:base_spec = { 'branch': '', 'frozen': 0 }$/;"	v
s:batchfile	/home/the-commits/.vim/autoload/plug.vim	/^  function! s:batchfile(cmd)$/;"	f
s:beep	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
s:bufnr	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^let s:bufnr = -1$/;"	v
s:bullet_for	/home/the-commits/.vim/autoload/plug.vim	/^function! s:bullet_for(job, ...)$/;"	f
s:cache	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^let s:cache = get(s:, 'cache', { 'n': {}, 'v': {} })$/;"	v
s:cache_key	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! s:cache_key(mode, key)$/;"	f
s:cached_translate	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:cached_translate(pat)$/;"	f
s:calc_layout	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! s:calc_layout(mappings) abort " {{{$/;"	f
s:changesurround	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:changesurround(...) " {{{1$/;"	f
s:chars	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:chars(string) abort$/;"	f
s:chars	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^let s:chars = map(range(32, 126), 'nr2char(v:val)')$/;"	v
s:check_assertions	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! s:check_assertions(job)$/;"	f
s:check_ruby	/home/the-commits/.vim/autoload/plug.vim	/^function! s:check_ruby()$/;"	f
s:checkout	/home/the-commits/.vim/autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
s:checkout_command	/home/the-commits/.vim/autoload/plug.vim	/^function! s:checkout_command(spec)$/;"	f
s:chsh	/home/the-commits/.vim/autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
s:clean	/home/the-commits/.vim/autoload/plug.vim	/^function! s:clean(force)$/;"	f
s:close_pane	/home/the-commits/.vim/autoload/plug.vim	/^function! s:close_pane()$/;"	f
s:close_split_win	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:close_split_win() abort$/;"	f
s:closematch	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
s:combine	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! s:combine(key, desc) abort$/;"	f
s:compare_git_uri	/home/the-commits/.vim/autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
s:comparecase	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:comparecase(i1, i2) abort$/;"	f
s:cpo_save	/home/the-commits/.vim/autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^let s:cpo_save = &cpo$/;"	v
s:create_rows	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! s:create_rows(layout, mappings) abort$/;"	f
s:create_runtime	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! s:create_runtime(mode, key)$/;"	f
s:createtimehandler	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:createtimehandler(format) abort$/;"	f
s:cterm01	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:cterm01 = "0"$/;"	v
s:cterm02	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:cterm02 = "24"$/;"	v
s:cterm03	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:cterm03 = "178"$/;"	v
s:cterm04	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:cterm04 = "99"$/;"	v
s:cterm05	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:cterm05 = "160"$/;"	v
s:cterm06	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:cterm06 = "37"$/;"	v
s:cterm07	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:cterm07 = "70"$/;"	v
s:cterm08	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:cterm08 = "56"$/;"	v
s:ctermBlack	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:ctermBlack = "0"$/;"	v
s:ctermWhite	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:ctermWhite = "231"$/;"	v
s:dateincrement	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:dateincrement(string, offset, increment) dict abort$/;"	f
s:days_abbr	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:days_abbr   =map(range(86400*3+43200-s:offset*60,86400*12,86400),'strftime("%a",v:val)')[0/;"	v
s:days_engl	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:days_engl   =["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]$/;"	v
s:days_full	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:days_full   =map(range(86400*3+43200-s:offset*60,86400*12,86400),'strftime("%A",v:val)')[0/;"	v
s:default_displaynames	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/renderer.vim	/^let s:default_displaynames = {$/;"	v
s:default_register	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^function! s:default_register()$/;"	f
s:define_commands	/home/the-commits/.vim/autoload/plug.vim	/^function! s:define_commands()$/;"	f
s:delete	/home/the-commits/.vim/autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
s:delete_op	/home/the-commits/.vim/autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
s:desc	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^let s:desc = get(s:, 'desc', { 'n': {}, 'v': {} })$/;"	v
s:diff	/home/the-commits/.vim/autoload/plug.vim	/^function! s:diff()$/;"	f
s:dirpath	/home/the-commits/.vim/autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
s:disable_credential_helper	/home/the-commits/.vim/autoload/plug.vim	/^function! s:disable_credential_helper()$/;"	f
s:div	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:div(a, b) abort$/;"	f
s:do	/home/the-commits/.vim/autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
s:doautocmd	/home/the-commits/.vim/autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
s:dobufread	/home/the-commits/.vim/autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
s:dosurround	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
s:dump_bytes	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:dump_bytes(text)$/;"	f
s:dump_chars	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:dump_chars(text)$/;"	f
s:echo_prompt	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! s:echo_prompt() abort$/;"	f
s:editorconfig_core_mode	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_core_mode = ''$/;"	v
s:editorconfig_core_mode	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_core_mode = g:EditorConfig_core_mode$/;"	v
s:editorconfig_exec_path	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_exec_path = ''$/;"	v
s:editorconfig_exec_path	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_exec_path = g:EditorConfig_exec_path$/;"	v
s:err	/home/the-commits/.vim/autoload/plug.vim	/^function! s:err(msg)$/;"	f
s:esc	/home/the-commits/.vim/autoload/plug.vim	/^function! s:esc(path)$/;"	f
s:escape	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:escape(mapping) abort " {{{$/;"	f
s:escape_keys	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! s:escape_keys(inp) abort " {{{$/;"	f
s:escrtp	/home/the-commits/.vim/autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
s:execute	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! s:execute(cmd) abort$/;"	f
s:execute	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:execute(cmd)$/;"	f
s:execute_native_fallback	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! s:execute_native_fallback(append) abort$/;"	f
s:extract_name	/home/the-commits/.vim/autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
s:extractafter	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
s:extractbefore	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
s:find_name	/home/the-commits/.vim/autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
s:findatoffset	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:findatoffset(string, pattern, offset) abort$/;"	f
s:findinline	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:findinline(pattern) abort$/;"	f
s:finish	/home/the-commits/.vim/autoload/plug.vim	/^function! s:finish(pull)$/;"	f
s:finish_bindings	/home/the-commits/.vim/autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
s:fixindent	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
s:flatten	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:flatten(dict, str) abort$/;"	f
s:floating_win_col_offset	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:floating_win_col_offset() abort$/;"	f
s:format_git_log	/home/the-commits/.vim/autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
s:format_message	/home/the-commits/.vim/autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
s:formattz	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:formattz(offset) abort$/;"	f
s:function	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:function(name) abort$/;"	f
s:gen_key_mapping	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! s:gen_key_mapping(mode,key)$/;"	f
s:get_filenames	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! s:get_filenames(path, config_filename)$/;"	f
s:get_raw_map_info	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:get_raw_map_info(key) abort$/;"	f
s:get_register	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! s:get_register() abort$/;"	f
s:getchar	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
s:getchar	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! s:getchar() abort$/;"	f
s:git_dir	/home/the-commits/.vim/autoload/plug.vim	/^function! s:git_dir(dir) abort$/;"	f
s:git_local_branch	/home/the-commits/.vim/autoload/plug.vim	/^function! s:git_local_branch(dir) abort$/;"	f
s:git_origin_branch	/home/the-commits/.vim/autoload/plug.vim	/^function! s:git_origin_branch(spec)$/;"	f
s:git_origin_url	/home/the-commits/.vim/autoload/plug.vim	/^function! s:git_origin_url(dir) abort$/;"	f
s:git_revision	/home/the-commits/.vim/autoload/plug.vim	/^function! s:git_revision(dir) abort$/;"	f
s:git_validate	/home/the-commits/.vim/autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
s:git_version_requirement	/home/the-commits/.vim/autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
s:glob	/home/the-commits/.vim/autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
s:glob_dir	/home/the-commits/.vim/autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
s:gregorian	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:gregorian(jd) abort$/;"	f
s:gui01	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:gui01 = "#262335"$/;"	v
s:gui02	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:gui02 = "#1094C3"$/;"	v
s:gui03	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:gui03 = "#D7AF00"$/;"	v
s:gui04	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:gui04 = "#FFCC4B"$/;"	v
s:gui05	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:gui05 = "#FF4143"$/;"	v
s:gui06	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:gui06 = "#1094C3"$/;"	v
s:gui07	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:gui07 = "#3DE163"$/;"	v
s:gui08	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:gui08 = "#7F4EFE"$/;"	v
s:guiBlack	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:guiBlack = "#000000"$/;"	v
s:guiWhite	/home/the-commits/.vim/plugged/vim-synthwave84/autoload/airline/themes/synthwave84.vim	/^let s:guiWhite = "#ffffff"$/;"	v
s:handle_char_on_start_is_ok	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! s:handle_char_on_start_is_ok(c) abort$/;"	f
s:handle_input	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! s:handle_input(input) " {{{$/;"	f
s:has_children	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^  function! s:has_children(input) abort$/;"	f
s:hash_match	/home/the-commits/.vim/autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
s:hide_cursor	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:hide_cursor() abort$/;"	f
s:hook_list	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig.vim	/^let s:hook_list = []$/;"	v
s:incrementstring	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:incrementstring(string, offset, count) abort$/;"	f
s:infer_properties	/home/the-commits/.vim/autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
s:initialize_exit_code	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! s:initialize_exit_code() abort$/;"	f
s:initialized	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^let s:initialized = 0$/;"	v
s:initializetime	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:initializetime(time) abort$/;"	f
s:inputreplacement	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
s:inputtarget	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
s:insert	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
s:install	/home/the-commits/.vim/autoload/plug.vim	/^function! s:install(force, names)$/;"	f
s:install_dir	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:install_dir = expand("<sfile>:p:h:h")$/;"	v
s:is_local_plug	/home/the-commits/.vim/autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
s:is_managed	/home/the-commits/.vim/autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
s:is_powershell	/home/the-commits/.vim/autoload/plug.vim	/^function! s:is_powershell(shell)$/;"	f
s:is_preview_window_open	/home/the-commits/.vim/autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
s:is_updated	/home/the-commits/.vim/autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
s:is_win	/home/the-commits/.vim/autoload/plug.vim	/^let s:is_win = has('win32')$/;"	v
s:isabsolute	/home/the-commits/.vim/autoload/plug.vim	/^function! s:isabsolute(dir) abort$/;"	f
s:jd	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:jd(year, mon, day) abort$/;"	f
s:job_abort	/home/the-commits/.vim/autoload/plug.vim	/^function! s:job_abort(cancel)$/;"	f
s:job_cb	/home/the-commits/.vim/autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
s:job_exit_cb	/home/the-commits/.vim/autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
s:job_out_cb	/home/the-commits/.vim/autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
s:join	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! s:join(...) abort$/;"	f
s:last_non_empty_line	/home/the-commits/.vim/autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
s:lastline	/home/the-commits/.vim/autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
s:lazy	/home/the-commits/.vim/autoload/plug.vim	/^function! s:lazy(plug, opt)$/;"	f
s:letterincrement	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:letterincrement(string, offset, increment) abort$/;"	f
s:lines	/home/the-commits/.vim/autoload/plug.vim	/^function! s:lines(msg)$/;"	f
s:load_plugin	/home/the-commits/.vim/autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
s:loaded	/home/the-commits/.vim/autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded_names	/home/the-commits/.vim/autoload/plug.vim	/^function! s:loaded_names()$/;"	f
s:localtime	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:localtime(...) abort$/;"	f
s:lod	/home/the-commits/.vim/autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
s:lod_cmd	/home/the-commits/.vim/autoload/plug.vim	/^  function! s:lod_cmd(cmd, bang, l1, l2, args, mods, names)$/;"	f
s:lod_cmd	/home/the-commits/.vim/autoload/plug.vim	/^  function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
s:lod_ft	/home/the-commits/.vim/autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
s:lod_map	/home/the-commits/.vim/autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
s:log	/home/the-commits/.vim/autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
s:log4	/home/the-commits/.vim/autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
s:logpos	/home/the-commits/.vim/autoload/plug.vim	/^function! s:logpos(name)$/;"	f
s:lpad	/home/the-commits/.vim/autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
s:mac_gui	/home/the-commits/.vim/autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:mark_aborted	/home/the-commits/.vim/autoload/plug.vim	/^function! s:mark_aborted(name, message)$/;"	f
s:match	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:match(...) abort$/;"	f
s:matches_filename	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! s:matches_filename(config_filename, target_filename, glob)$/;"	f
s:me	/home/the-commits/.vim/autoload/plug.vim	/^  let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:merge	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! s:merge(target, native) " {{{$/;"	f
s:merge_command	/home/the-commits/.vim/autoload/plug.vim	/^function! s:merge_command(spec)$/;"	f
s:mod	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:mod(a, b) abort$/;"	f
s:modyear	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:modyear(y) abort$/;"	f
s:months_abbr	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:months_abbr =map(range(86400*2,86400*365,86400*31),'strftime("%b",v:val)')$/;"	v
s:months_engl	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:months_engl =["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]$/;"	v
s:months_full	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:months_full =map(range(86400*2,86400*365,86400*31),'strftime("%B",v:val)')$/;"	v
s:names	/home/the-commits/.vim/autoload/plug.vim	/^function! s:names(...)$/;"	f
s:new_window	/home/the-commits/.vim/autoload/plug.vim	/^function! s:new_window()$/;"	f
s:normalizetime	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:normalizetime(time) abort$/;"	f
s:numberincrement	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:numberincrement(string, offset, increment) abort$/;"	f
s:nvim	/home/the-commits/.vim/autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:nvim_cb	/home/the-commits/.vim/autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
s:offset	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:offset     = s:localtime((  0+30*365)*86400).o$/;"	v
s:offset_dst	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:offset_dst = s:localtime((180+30*365)*86400).o$/;"	v
s:open_split_win	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:open_split_win() abort$/;"	f
s:opfunc	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc(type, ...) abort " {{{1$/;"	f
s:opfunc2	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc2(...) abort$/;"	f
s:optionxform	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! s:optionxform(optionstr)$/;"	f
s:ordinalincrement	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:ordinalincrement(string, offset, increment) abort$/;"	f
s:ordinalize	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:ordinalize(number) abort$/;"	f
s:parse	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! s:parse(config_filename, target_filename, lines)$/;"	f
s:parse_options	/home/the-commits/.vim/autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
s:path	/home/the-commits/.vim/autoload/plug.vim	/^  function! s:path(path)$/;"	f
s:plug_buf	/home/the-commits/.vim/autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_call	/home/the-commits/.vim/autoload/plug.vim	/^  function! s:plug_call(fn, ...)$/;"	f
s:plug_expand	/home/the-commits/.vim/autoload/plug.vim	/^function! s:plug_expand(fmt)$/;"	f
s:plug_fnamemodify	/home/the-commits/.vim/autoload/plug.vim	/^function! s:plug_fnamemodify(fname, mods)$/;"	f
s:plug_getcwd	/home/the-commits/.vim/autoload/plug.vim	/^function! s:plug_getcwd()$/;"	f
s:plug_src	/home/the-commits/.vim/autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	/home/the-commits/.vim/autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plug_tempname	/home/the-commits/.vim/autoload/plug.vim	/^function! s:plug_tempname()$/;"	f
s:plug_window_exists	/home/the-commits/.vim/autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
s:prepare	/home/the-commits/.vim/autoload/plug.vim	/^function! s:prepare(...)$/;"	f
s:preprocess_values	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! s:preprocess_values(job, opts)$/;"	f
s:preview_commit	/home/the-commits/.vim/autoload/plug.vim	/^function! s:preview_commit()$/;"	f
s:process	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
s:progress_bar	/home/the-commits/.vim/autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
s:progress_opt	/home/the-commits/.vim/autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
s:re_escape	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:re_escape(text)$/;"	f
s:reap	/home/the-commits/.vim/autoload/plug.vim	/^function! s:reap(name)$/;"	f
s:redraw	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
s:register	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! s:register() abort$/;"	f
s:regress_bar	/home/the-commits/.vim/autoload/plug.vim	/^function! s:regress_bar()$/;"	f
s:reindent	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:reindent() abort " {{{1$/;"	f
s:reload_plugins	/home/the-commits/.vim/autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
s:remove_rtp	/home/the-commits/.vim/autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
s:remove_triggers	/home/the-commits/.vim/autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
s:reorg_rtp	/home/the-commits/.vim/autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
s:replaceinline	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:replaceinline(start, end, new) abort$/;"	f
s:replacement_expr	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:replacement_expr =$/;"	v
s:retry	/home/the-commits/.vim/autoload/plug.vim	/^function! s:retry()$/;"	f
s:revert	/home/the-commits/.vim/autoload/plug.vim	/^function! s:revert()$/;"	f
s:rhs	/home/the-commits/.vim/plugged/vim-speeddating/plugin/speeddating.vim	/^  let s:rhs = maparg(s:key, 'n')$/;"	v
s:rm_rf	/home/the-commits/.vim/autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
s:roman2arabic	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:roman2arabic(roman) abort$/;"	f
s:rtp	/home/the-commits/.vim/autoload/plug.vim	/^function! s:rtp(spec)$/;"	f
s:save_cpo	/home/the-commits/.vim/plugged/vim-which-key/plugin/which_key.vim	/^let s:save_cpo = &cpo$/;"	v
s:saved_cpo	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	/home/the-commits/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/util.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	/home/the-commits/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^let s:saved_cpo = &cpo$/;"	v
s:section	/home/the-commits/.vim/autoload/plug.vim	/^function! s:section(flags)$/;"	f
s:sep	/home/the-commits/.vim/plugged/vim-which-key/syntax/which_key.vim	/^let s:sep = which_key#get_sep()$/;"	v
s:setvirtcol	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:setvirtcol(line, col) abort$/;"	f
s:shellesc_cmd	/home/the-commits/.vim/autoload/plug.vim	/^function! s:shellesc_cmd(arg, script)$/;"	f
s:shellesc_ps1	/home/the-commits/.vim/autoload/plug.vim	/^function! s:shellesc_ps1(arg)$/;"	f
s:shellesc_sh	/home/the-commits/.vim/autoload/plug.vim	/^function! s:shellesc_sh(arg)$/;"	f
s:should_note_winid	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^let s:should_note_winid = exists('*win_getid')$/;"	v
s:show_floating_win	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:show_floating_win(rows, layout) abort$/;"	f
s:show_next_level_mappings	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! s:show_next_level_mappings(next_runtime) abort$/;"	f
s:show_old_win	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:show_old_win(rows, layout) abort$/;"	f
s:show_popup	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:show_popup(rows) abort$/;"	f
s:show_upper_level_mappings	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! s:show_upper_level_mappings() abort$/;"	f
s:snapshot	/home/the-commits/.vim/autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
s:source	/home/the-commits/.vim/autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
s:spawn	/home/the-commits/.vim/autoload/plug.vim	/^function! s:spawn(name, spec, queue, opts)$/;"	f
s:special_keys	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^    let s:special_keys[code] = key$/;"	v
s:special_keys	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^  let s:special_keys[code] = key$/;"	v
s:special_keys	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^let s:special_keys = {$/;"	v
s:split_or_new	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:split_or_new() abort$/;"	f
s:split_rtp	/home/the-commits/.vim/autoload/plug.vim	/^function! s:split_rtp()$/;"	f
s:status	/home/the-commits/.vim/autoload/plug.vim	/^function! s:status()$/;"	f
s:status_load	/home/the-commits/.vim/autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
s:status_update	/home/the-commits/.vim/autoload/plug.vim	/^function! s:status_update() range$/;"	f
s:strftime	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:strftime(pattern, time) abort$/;"	f
s:strftime_items	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:strftime_items = {$/;"	v
s:string_to_keys	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:string_to_keys(input) abort$/;"	f
s:switch_in	/home/the-commits/.vim/autoload/plug.vim	/^function! s:switch_in()$/;"	f
s:switch_out	/home/the-commits/.vim/autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
s:syntax	/home/the-commits/.vim/autoload/plug.vim	/^function! s:syntax()$/;"	f
s:system	/home/the-commits/.vim/autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
s:system_chomp	/home/the-commits/.vim/autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
s:t_Co	/home/the-commits/.vim/plugged/vim-synthwave84/colors/synthwave84.vim	/^let s:t_Co = exists('&t_Co') && !empty(&t_Co) && &t_Co > 1 ? &t_Co : 2$/;"	v
s:tick	/home/the-commits/.vim/autoload/plug.vim	/^function! s:tick()$/;"	f
s:time_handlers	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^  let s:time_handlers = []$/;"	v
s:timeregexp	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! s:timeregexp() dict abort$/;"	f
s:to_a	/home/the-commits/.vim/autoload/plug.vim	/^function! s:to_a(v)$/;"	f
s:to_s	/home/the-commits/.vim/autoload/plug.vim	/^function! s:to_s(v)$/;"	f
s:triggers	/home/the-commits/.vim/autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:trim	/home/the-commits/.vim/autoload/plug.vim	/^function! s:trim(str)$/;"	f
s:update	/home/the-commits/.vim/autoload/plug.vim	/^function! s:update(force, names)$/;"	f
s:update_finish	/home/the-commits/.vim/autoload/plug.vim	/^function! s:update_finish()$/;"	f
s:update_impl	/home/the-commits/.vim/autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
s:update_python	/home/the-commits/.vim/autoload/plug.vim	/^function! s:update_python()$/;"	f
s:update_ruby	/home/the-commits/.vim/autoload/plug.vim	/^function! s:update_ruby()$/;"	f
s:update_vim	/home/the-commits/.vim/autoload/plug.vim	/^function! s:update_vim()$/;"	f
s:upgrade	/home/the-commits/.vim/autoload/plug.vim	/^function! s:upgrade()$/;"	f
s:upgrade_specs	/home/the-commits/.vim/autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
s:use_popup	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^let s:use_popup = exists('*popup_create') && g:which_key_use_floating_win$/;"	v
s:version_requirement	/home/the-commits/.vim/autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
s:vim8	/home/the-commits/.vim/autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:visual_handlers	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:visual_handlers += [{'regexp': '-\\=\\<\\%(0x\\x\\+\\|\\d\\+\\)\\>', 'increment': s:functi/;"	v
s:visual_handlers	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:visual_handlers += [{'regexp': '\\<[A-Za-z]\\>', 'increment': s:function("s:letterincremen/;"	v
s:visual_handlers	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^let s:visual_handlers = []$/;"	v
s:wait_with_timeout	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! s:wait_with_timeout(timeout) abort$/;"	f
s:warn	/home/the-commits/.vim/autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
s:winnr	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^let s:winnr = -1$/;"	v
s:with_cd	/home/the-commits/.vim/autoload/plug.vim	/^function! s:with_cd(cmd, dir, ...)$/;"	f
s:wrap	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,removed,special)$/;"	f
s:wrap_cmds	/home/the-commits/.vim/autoload/plug.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
s:wrapreg	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,removed,special)$/;"	f
script_output_fn	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^    $script_output_fn = [System.IO.Path]::GetTempFileName()$/;"	v
script_output_fn	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$script_output_fn = ''$/;"	v
sensible.vim	/home/the-commits/.vim/plugged/vim-sensible/README.markdown	/^# sensible.vim$/;"	c
set_version	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^                $set_version = $argv[$idx]$/;"	v
set_version	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$set_version = ''$/;"	v
space.txt	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    it 'space.txt' do$/;"	i	describe:plugin/editorconfig.vim
spec	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/Rakefile	/^RSpec::Core::RakeTask.new(:spec)$/;"	x	typeref:typename:RSpec::Core::RakeTask.new
speeddating#adddate	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! speeddating#adddate(master, count, bang) abort$/;"	f
speeddating#increment	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! speeddating#increment(increment) abort$/;"	f
speeddating#incrementvisual	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! speeddating#incrementvisual(count) abort$/;"	f
speeddating#loadformats	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! speeddating#loadformats() abort$/;"	f
speeddating#timestamp	/home/the-commits/.vim/plugged/vim-speeddating/autoload/speeddating.vim	/^function! speeddating#timestamp(utc, count) abort$/;"	f
speeddating.vim	/home/the-commits/.vim/plugged/vim-speeddating/README.markdown	/^# speeddating.vim$/;"	c
surround.vim	/home/the-commits/.vim/plugged/vim-surround/README.markdown	/^# surround.vim$/;"	c
tab.txt	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    it 'tab.txt' do$/;"	i	describe:plugin/editorconfig.vim
test_editorconfig	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^def test_editorconfig(vim, file_name, expected_values)$/;"	f
test_instance	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^def test_instance(vim)$/;"	f
tests_cmake_ec_sort_dir	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/cmake/ec_sort.cmake	/^set(tests_cmake_ec_sort_dir "${CMAKE_CURRENT_LIST_DIR}")$/;"	v
tests_cmakelists_dir	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^set(tests_cmakelists_dir "${CMAKE_CURRENT_LIST_DIR}")$/;"	v
tests_meta_cmakelists_dir	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/meta/CMakeLists.txt	/^set(tests_meta_cmakelists_dir "${CMAKE_CURRENT_LIST_DIR}")$/;"	v
tests_meta_sample_dir	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/tests/meta/sample.cmake	/^set( tests_meta_sample_dir "${CMAKE_CURRENT_LIST_DIR}" )$/;"	v
u	/home/the-commits/.vim/plugged/vim-repeat/autoload/repeat.vim	/^    nmap u <Plug>(RepeatUndo)$/;"	m
utf-16be.txt	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    it 'utf-16be.txt' do$/;"	i	describe:plugin/editorconfig.vim
utf-16le.txt	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    it 'utf-16le.txt' do$/;"	i	describe:plugin/editorconfig.vim
utf-8-bom.txt	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    it 'utf-8-bom.txt' do$/;"	i	describe:plugin/editorconfig.vim
utf-8.txt	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    it 'utf-8.txt' do$/;"	i	describe:plugin/editorconfig.vim
vesc	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^function global:vesc($str) {$/;"	f
vim-which-key	/home/the-commits/.vim/plugged/vim-which-key/README.md	/^# vim-which-key$/;"	c
vim_args	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$vim_args = @($/;"	v
vimstatus	/home/the-commits/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$vimstatus = run_process $VIM -stdout $debug -stderr $debug `$/;"	v
which_key#char_handler#is_exit_code	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! which_key#char_handler#is_exit_code(raw_char) abort$/;"	f
which_key#char_handler#parse_raw	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! which_key#char_handler#parse_raw(raw_char)$/;"	f
which_key#char_handler#timeout_for_next_char	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! which_key#char_handler#timeout_for_next_char() abort$/;"	f
which_key#char_handler#wait_with_timeout	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! which_key#char_handler#wait_with_timeout() abort$/;"	f
which_key#error#missing_mapping	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/error.vim	/^function! which_key#error#missing_mapping() abort$/;"	f
which_key#error#report	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/error.vim	/^function! which_key#error#report(err_msg) abort$/;"	f
which_key#error#undefined_key	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/error.vim	/^function! which_key#error#undefined_key(key) abort$/;"	f
which_key#format	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#format(mapping) abort$/;"	f
which_key#get_sep	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#get_sep() abort$/;"	f
which_key#mappings#parse	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! which_key#mappings#parse(key, dict, visual) " {{{$/;"	f
which_key#parse_mappings	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#parse_mappings() " {{{$/;"	f
which_key#register	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#register(prefix, dict, ...) abort$/;"	f
which_key#renderer#get_displaynames	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! which_key#renderer#get_displaynames()$/;"	f
which_key#renderer#prepare	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! which_key#renderer#prepare(runtime) abort$/;"	f
which_key#start	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#start(vis, bang, prefix) " {{{$/;"	f
which_key#statusline	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#statusline() abort$/;"	f
which_key#trigger	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#trigger() abort$/;"	f
which_key#wait_for_input	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#wait_for_input() " {{{$/;"	f
which_key#window#close	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^function! which_key#window#close() abort$/;"	f
which_key#window#name	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^function! which_key#window#name() abort$/;"	f
which_key#window#show	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^function! which_key#window#show(runtime) abort$/;"	f
which_key_cursor	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^  augroup which_key_cursor$/;"	a
which_key_leave	/home/the-commits/.vim/plugged/vim-which-key/autoload/which_key/window.vim	/^    augroup which_key_leave$/;"	a
which_key_mapping_tags#Init	/home/the-commits/.vim/autoload/which_key_mapping_tags.vim	/^function! which_key_mapping_tags#Init()$/;"	f
which_key_mapping_tags#Map	/home/the-commits/.vim/autoload/which_key_mapping_tags.vim	/^function! which_key_mapping_tags#Map()$/;"	f
which_key_mapping_windows#Init	/home/the-commits/.vim/autoload/which_key_mapping_windows.vim	/^function! which_key_mapping_windows#Init()$/;"	f
which_key_mapping_windows#Map	/home/the-commits/.vim/autoload/which_key_mapping_windows.vim	/^function! which_key_mapping_windows#Map()$/;"	f
with_newline.txt	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^      it 'with_newline.txt' do$/;"	i	describe:plugin/editorconfig.vim
without_newline.txt	/home/the-commits/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^      it 'without_newline.txt' do$/;"	i	describe:plugin/editorconfig.vim
yS	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
ys	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	/home/the-commits/.vim/plugged/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
