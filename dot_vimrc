" ================================================
" üåê Allm√§nna inst√§llningar
" ================================================
set nocompatible
filetype plugin indent on
syntax on
set encoding=utf-8
set number
set relativenumber
set ruler
set hidden
set tags=~/.vim/tags

" ================================================
" üõ†Ô∏è UI / Livskvalitet
" ================================================
set mouse=a
set showcmd
set cursorline
set wildmenu
set wildmode=longest:full,full
set wrap
set linebreak
set showmatch
set scrolloff=5
set timeoutlen=500
set laststatus=2
set statusline=\"%{expand('%:t')}\"\ %M\ line\ %l\ of\ %L\ --%P%%%%--\ col\ %c

" ================================================
" ‚å®Ô∏è Tangentbordsmappningar
" ================================================
let g:mapleader="\<Space>"
let g:maplocalleader=','

" Vim-specifika mappningar (inte Neovim)
if !has('nvim')
  " Plats f√∂r Vim-specifika mappningar om det beh√∂vs
endif

" WhichKey-integration
nnoremap <silent> <leader>      :<c-u>WhichKey '<Space>'<CR>
nnoremap <silent> <localleader> :<c-u>WhichKey  ','<CR>

" Ladda om .vimrc
nnoremap <leader>s :source $MYVIMRC \| :nohlsearch<CR>

" Urklippshantering (om xclip finns)
if executable('xclip')
  nnoremap <Leader>y :w !xclip -selection clipboard<CR>
  nnoremap <Leader>p :r !xclip -selection clipboard -o<CR>
endif

" ================================================
" üìù Indentering
" ================================================
set tabstop=2
set shiftwidth=2
set expandtab
set autoindent
set smartindent

" ================================================
" üìÅ Filtr√§d (NERDTree etc.)
" ================================================
" map <leader>n :NERDTreeToggle<CR>

" ================================================
" üîç S√∂kning
" ================================================
set ignorecase
set smartcase
set incsearch
set hlsearch

" ================================================
" üìÑ Buffertar & F√∂nster
" ================================================
set splitbelow
set splitright

" ================================================
" üß™ Plugins (vim-plug)
" ================================================
call plug#begin()
  Plug 'vimwiki/vimwiki'
  Plug 'artanikin/vim-synthwave84'
  Plug 'liuchengxu/vim-which-key'
  Plug 'tpope/vim-sensible'
  Plug 'tpope/vim-surround'
  Plug 'tpope/vim-speeddating'
  Plug 'tpope/vim-repeat'
call plug#end()

" ================================================
" üß© Ladda funktioner fr√•n autoload
" ================================================
" Keybindings fr√•n plugins
" https://www.vim.org/scripts/script.php?script_id=1697 (line_numbers.vim)
call line_numbers#ToggleLineNumbers()

" WhichKey-mappningar fr√•n autoload-filer
call which_key_mapping_windows#Init()
call which_key_mapping_tags#Init()

" ================================================
" üß∑ Terminalinst√§llningar
" ================================================
syntax enable
if exists('term')
  if has('xterm-256color')
    set term=xterm-256color
  elseif has('screen-256color')
    set term=screen-256color
  endif
endif
if has('termguicolors')
  set termguicolors
endif
set background=dark
colorscheme synthwave84

" Transparent bakgrund
autocmd VimEnter * hi Normal guibg=NONE ctermbg=NONE
autocmd ColorScheme * hi Normal guibg=NONE ctermbg=NONE

" ================================================
" üîÑ Automatisk Ctags f√∂r Vim-konfiguration
" ================================================
augroup AutoUpdateVimConfigTagsSimple
  autocmd!
  autocmd BufWritePost ~/.vimrc,${HOME}/.vim/**/* call s:UpdateVimConfigTagsSimple()
augroup END

function! s:UpdateVimConfigTagsSimple()
  let l:ctags_command = 'ctags -R --exclude=.netrw_historyrc -f ~/.vim/tags ~/.vimrc ~/.vim'
  let l:output = system(l:ctags_command)
  if v:shell_error > 0
    echohl ErrorMsg
    echomerr "‚õî Fel: Ctags-uppdatering f√∂r Vim-konfig misslyckades!"
    echohl None
    echom "   Kommando som k√∂rdes: " . l:ctags_command
    if !empty(l:output)
      echom "   Output fr√•n ctags: " . l:output
    endif
  endif
endfunction

